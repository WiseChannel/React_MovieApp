{"version":3,"sources":["Components/images/no_image.jpg","Components/styles/StyledHeader.js","Components/Header/Header.js","Components/styles/GlobalStyle.js","Config/config.js","Components/styles/StyledHeroImage.js","Components/Elements/HeroImage.js","Components/Elements/SearchBar.js","Components/styles/StyledGrid.js","Components/Elements/Grid.js","Components/styles/StyledMovieThumb.js","Components/Elements/MovieThumb.js","Components/styles/StyledLoadMoreBtn.js","Components/Elements/LoadMore.js","Components/styles/StyledSpinner.js","Components/Elements/Spinner.js","Components/Home.js","Components/Hooks/useHomeFetch.js","App.js","index.js"],"names":["module","exports","StyledHeader","styled","div","Header","img","className","GlobalStyle","createGlobalStyle","API_URL","API_KEY","StyledHeroImage","props","image","HeroImage","title","text","SearchBar","StyledGrid","StyledGridContent","Grid","header","children","StyledMovieThumb","MovieThumb","clickable","movieId","src","alt","StyledLoadMoreBtn","button","LoadMoreBtn","callback","type","onClick","StyledSpinner","Spinner","Home","useState","movies","state","setState","loading","setLoading","error","setError","console","log","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","useEffect","useHomeFetch","searchTerm","backdrop_path","original_title","overview","map","movie","key","id","poster_path","NoImage","movieName","LoadMore","searchEndpoint","popularEndpoint","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c79d991f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";","import styled from 'styled-components';\r\n\r\n export const StyledHeader = styled.div`\r\n  background: #1c1c1c;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n\r\n  .header-content {\r\n    max-width: 1280px;\r\n    min-height: 120px;\r\n    padding: 20px 0px;\r\n    margin: 0 auto;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    h2 {\r\n      color: white; \r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n      max-width: 1280px;\r\n      min-height: 0px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledRMDBLogo = styled.img`\r\n  width: 250px;\r\n  margin-top: 20px;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    width: 150px;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n\r\nexport const StyledTMDBLogo = styled.img`\r\n  width: 122px;\r\n  margin-top: 25px;\r\n  float: right;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    display: inline-block;\r\n    width: 80px;\r\n    margin-top: 0px;\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport styles from 'styled-components'\r\n\r\nimport {StyledHeader } from '../styles/StyledHeader'\r\n\r\n//import NewLogo from '../images/...'       *Нарисовать логотип* \r\n\r\nconst Header = () => {\r\n    return(\r\n        <StyledHeader>\r\n            <div className='header-content'>\r\n                <h2>NewLogo_IMG</h2>   \r\n                <h2>TmDb</h2>\r\n            </div>\r\n        </StyledHeader>\r\n    )\r\n};\r\n\r\nexport default Header\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n","\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = 'd4e9e87f14a720e32c310104fc6d3f6b';\r\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\r\n\r\n//const API_KEYV4 = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNGU5ZTg3ZjE0YTcyMGUzMmMzMTAxMDRmYzZkM2Y2YiIsInN1YiI6IjVlNmQzNWZhMTQyZWYxMDAxNzdmMmIwZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VoEnnJLd2a59uCsg-siVhpX1YiqXK7w-Ea8P1TA4qW4'\r\n\r\nconst BACKDROP_SIZE = 'w1280';\r\nconst POSTER_SIZE = 'w500';\r\n\r\nexport {\r\n    API_KEY,\r\n    API_URL,\r\n    BACKDROP_SIZE,\r\n    POSTER_SIZE,\r\n    IMAGE_BASE_URL\r\n}\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledHeroImage = styled.div`\r\n  background: ${props =>\r\n    `linear-gradient(\r\n      to bottom, rgba(0,0,0,0)\r\n      39%,rgba(0,0,0,0)\r\n      41%,rgba(0,0,0,0.65)\r\n      100%\r\n    ),\r\n    url('${props.image}'), #1c1c1c`};\r\n  background-size: 100%, cover !important;\r\n  background-position: center, center !important;\r\n  width: 100%;\r\n  height: 600px;\r\n  position: relative;\r\n  animation: animateHeroimage 1s;\r\n\r\n  .heroimage-content {\r\n    max-width: 1280px;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .heroimage-text {\r\n    z-index: 100;\r\n    max-width: 700px;\r\n    position: absolute;\r\n    bottom: 40px;\r\n    margin-right: 20px;\r\n    min-height: 100px;\r\n    background: rgba(0, 0, 0, 0);\r\n    color: #fff;\r\n\r\n    h1 {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 48px;\r\n      color: #fff;\r\n\r\n      @media screen and (max-width: 720px) {\r\n        font-size: 38px;\r\n        color: #fff;\r\n      }\r\n    }\r\n\r\n    p {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 22px;\r\n      line-height: 26px;\r\n      color: #fff;\r\n\r\n      @media screen and (max-width: 720px) {\r\n        font-size: 16px;\r\n        line-height: 20px;\r\n        color: #fff;\r\n      }\r\n    }\r\n\r\n    @media screen and (max-width: 720px) {\r\n      max-width: 100%;\r\n    }\r\n  }\r\n\r\n  @keyframes animateHeroimage {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport { StyledHeroImage } from '../styles/StyledHeroImage'\r\n\r\nconst HeroImage = ({ image, title, text} ) => {\r\n    return (\r\n        <StyledHeroImage image={image}>\r\n            <div className='heroimage-content'>\r\n                <div className='heroimage-text'>\r\n                    <h1>{title}</h1>\r\n                    <p>{text}</p>\r\n                </div>\r\n            </div>\r\n        </StyledHeroImage>\r\n        \r\n    )\r\n}\r\n\r\nexport default HeroImage\r\n","import React from 'react'\r\n\r\nconst SearchBar = () => {\r\n    return <div>SearchBar</div>\r\n}\r\n\r\nexport default SearchBar\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledGrid = styled.div`\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  h1 {\r\n    font-family: 'Abel', sans-serif;\r\n    font-size: 42px;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      font-size: 22px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledGridContent = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\r\n  grid-gap: 40px;\r\n  position: relative;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\r\n  }\r\n\r\n  @media screen and (max-width: 375px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n  }\r\n`;\r\n","import React from 'react'\r\n\r\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid'\r\n\r\nconst Grid = ({ header, children }) => (\r\n   <StyledGrid>\r\n     <h1>{header}</h1>\r\n     <StyledGridContent>{children}</StyledGridContent>\r\n   </StyledGrid>\r\n )\r\n\r\nexport default Grid\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledMovieThumb = styled.div`\r\n  img {\r\n    width: 100%;\r\n    /* min-height: 340px; */\r\n    transition: all 0.3s;\r\n    object-fit: cover;\r\n    border-radius: 20px;\r\n    animation: animateMovieThumb 0.5s;\r\n\r\n    :hover {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    .clickable {\r\n      cursor: pointer;\r\n    }\r\n\r\n    @keyframes animateMovieThumb {\r\n      from {\r\n        opacity: 0;\r\n      }\r\n      to {\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react'\r\n\r\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb'\r\n\r\nconst MovieThumb = ({ image, movieId, clickable }) => (\r\n    <StyledMovieThumb>\r\n      {clickable ? (\r\n        <img className=\"clickable\" src={image} alt=\"moviethumb\" />\r\n      ) : (\r\n        <img src={image} alt=\"moviethumb\" />\r\n      )}\r\n    </StyledMovieThumb>\r\n  )\r\n\r\nexport default MovieThumb\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledLoadMoreBtn = styled.button`\r\n  background: #000;\r\n  width: 25%;\r\n  min-width: 200px;\r\n  height: 70px;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  border-radius: 40px;\r\n  font-family: 'Abel', sans-serif;\r\n  font-size: 28px;\r\n  max-width: 1280px;\r\n  display: block;\r\n  margin: 20px auto;\r\n  padding: 0 20px;\r\n  outline: none;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn';\r\n\r\nconst LoadMoreBtn = ({ text, callback }) => (\r\n  <StyledLoadMoreBtn type=\"button\" onClick={callback}>\r\n    {text}\r\n  </StyledLoadMoreBtn>\r\n)\r\n\r\nexport default LoadMoreBtn;","import styled from 'styled-components';\r\n\r\nexport const StyledSpinner = styled.div`\r\n  border: 5px solid #f3f3f3; /* Light grey */\r\n  border-top: 5px solid #16d47b; /* Blue */\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  animation: spin 0.8s linear infinite;\r\n  margin: 20px auto;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport {StyledSpinner} from '../styles/StyledSpinner'\r\n\r\nconst Spinner = () => {return <StyledSpinner/>}\r\n\r\nexport default Spinner\r\n","import React, { useState } from 'react'\r\n\r\n//import Config\r\nimport {\r\n        API_URL,\r\n        API_KEY,\r\n        IMAGE_BASE_URL,\r\n        POSTER_SIZE,\r\n        BACKDROP_SIZE\r\n} from \"../Config/config\";\r\n\r\n// import Components\r\nimport HeroImage from \"./Elements/HeroImage\";\r\nimport SearchBar from \"./Elements/SearchBar\";\r\nimport Grid from \"./Elements/Grid\";\r\nimport MovieThumb from \"./Elements/MovieThumb\";\r\nimport LoadMoreBtn from \"./Elements/LoadMore\";\r\nimport Spinner from \"./Elements/Spinner\";\r\n\r\n//import custom hook\r\nimport { useHomeFetch } from \"./Hooks/useHomeFetch\";\r\n\r\nimport NoImage from './images/no_image.jpg'\r\n\r\nconst Home = () => {\r\n    const [\r\n        {\r\n            state: {movies, currentPage, totalPages, heroImage}, \r\n            loading, \r\n            error \r\n        }, \r\n        fetchMovies] = useHomeFetch();\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    const loadMoreMovies = () => {\r\n        const searchEndpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}&page=${currentPage + 1}`;\r\n        \r\n        const popularEndpoint = `${API_URL}movie/popular?api_key=${API_KEY}&page=${currentPage + 1}`;\r\n    \r\n        const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\r\n    \r\n        fetchMovies(endpoint);\r\n      }\r\n\r\n    if(error) return <div>New error in Home</div>\r\n\r\n    if(!movies[0]) return <Spinner/>\r\n\r\n    return (\r\n        <>\r\n          <HeroImage\r\n            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n            title={heroImage.original_title}\r\n            text={heroImage.overview}\r\n          />\r\n          <SearchBar />\r\n          <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\r\n            {movies.map(movie => (\r\n              <MovieThumb\r\n                key={movie.id}\r\n                clickable\r\n                image={\r\n                  movie.poster_path\r\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                    : NoImage\r\n                }\r\n                movieId={movie.id}\r\n                movieName={movie.original_title}\r\n              />\r\n            ))}\r\n          </Grid>\r\n          {loading && <Spinner />}\r\n          {currentPage < totalPages && !loading && (\r\n            <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />\r\n          )}\r\n        </>\r\n      );\r\n};\r\n\r\nexport default Home\r\n","import {useEffect, useState} from 'react'\r\nimport {API_KEY, API_URL} from \"../../Config/config\";\r\n\r\nexport const useHomeFetch = () => {\r\n    const [state, setState] = useState({movies: []});\r\n    const [loading, setLoading] = useState(false );\r\n    const [error, setError] = useState(false);\r\n\r\n    console.log(state);\r\n\r\n    const fetchMovies = async endpoint => {\r\n        setError(false);\r\n        setLoading(true);\r\n\r\n        const isLoadMore = endpoint.search('page');\r\n\r\n        try {\r\n            const result = await (await fetch(endpoint)).json();\r\n            setState(prev => ({\r\n              ...prev,\r\n              movies:\r\n                isLoadMore !== -1\r\n              ? [...prev.movies, ...result.results]\r\n              : [...result.results],\r\n              heroImage: prev.heroImage || result.results[0],\r\n              currentPage: result.page,\r\n              totalPages: result.total_pages\r\n            }))\r\n\r\n        } catch (e) {\r\n            setError(true);\r\n            console.error('Error from Home: ' + e);\r\n        }\r\n        setLoading(false)\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMovies(`${API_URL}movie/popular?api_key=${API_KEY} `);\r\n    }, []);\r\n\r\n    return[{state, loading, error}, fetchMovies]\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./Components/Header/Header\";\r\n\r\nimport {GlobalStyle} from './Components/styles/GlobalStyle';\r\n\r\nimport Home from \"./Components/Home\";\r\n\r\n\r\nconst App = () => {\r\n  return(\r\n      <>\r\n        <Header/>\r\n        <Home/>\r\n        <GlobalStyle/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}