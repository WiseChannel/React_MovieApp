{"version":3,"sources":["Components/styles/StyledHeader.js","Components/Elements/Header.js","Components/styles/GlobalStyle.js","Config/config.js","Components/styles/StyledHeroImage.js","Components/Elements/HeroImage.js","Components/styles/StyledSearchBar.js","Components/styles/StyledNavigation.js","Components/styles/StyledMovieThumb.js","Config/helpers.js","Components/styles/StyledMovieInfoBar.js","Components/styles/StyledMovieInfo.js","Components/styles/StyledLoadMoreBtn.js","Components/Elements/LoadMore.js","Components/Elements/MovieInfo.js","Components/Elements/MovieInfoBar.js","Components/Elements/MovieThumb.js","Components/Elements/Navigation.js","Components/Elements/SearchBar.js","Components/styles/StyledGrid.js","Components/Elements/Grid.js","Components/styles/StyledSpinner.js","Components/Elements/Spinner.js","Components/Home.js","Components/Hooks/useHomeFetch.js","Components/styles/StyledActor.js","Components/Elements/Actor.js","Components/Movie.js","Components/Hooks/useMovieFetch.js","Components/NotFound.js","App.js","serviceWorker.js","index.js","Components/images/no_image.jpg"],"names":["StyledHeader","styled","div","img","Header","className","to","GlobalStyle","createGlobalStyle","API_URL","API_KEY","IMAGE_BASE_URL","SEARCH_BASE_URL","POPULAR_BASE_URL","StyledHeroImage","props","image","HeroImage","title","text","StyledSearchBar","StyledSearchBarContent","StyledNavigation","StyledMovieThumb","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","StyledMovieInfoBar","StyledMovieInfo","backdrop","StyledLoadMoreBtn","button","LoadMoreBtn","callback","type","onClick","MovieInfo","movie","backdrop_path","poster_path","NoImage","clickable","overview","vote_average","directors","length","map","element","key","credit_id","name","MovieInfoBar","time","budget","revenue","size","hours","Math","floor","mins","calcTime","MovieThumb","movieId","src","alt","Navigation","SearchBar","useState","state","setState","timeOut","useRef","placeholder","onChange","e","value","target","clearTimeout","current","setTimeout","StyledGrid","StyledGridContent","Grid","header","children","StyledSpinner","Spinner","Home","searchTerm","setSearchTerm","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","useEffect","sessionStorage","homeState","JSON","parse","setItem","stringify","useHomeFetch","original_title","id","movieName","LoadMore","searchEndpoint","popularEndpoint","StyledActor","Actor","actor","profile_path","character","proppTypes","PropTypes","object","Movie","fetchData","useCallback","creditsEndpoint","creditsResult","crew","filter","member","job","actors","cast","useMovieFetch","runtime","NotFound","App","path","default","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"8qCAEQ,IAAMA,EAAeC,IAAOC,IAAV,K,GAyBID,IAAOE,IAAV,KAUGF,IAAOE,IAAV,K,MCjBZC,EAbA,WACX,OACI,kBAACJ,EAAD,KACI,yBAAKK,UAAU,kBACX,kBAAC,IAAD,CAAMC,GAAG,KACL,4CAEJ,8C,oJCZT,IAAMC,EAAcC,YAAH,K,OCDlBC,EAAU,gCACVC,EAAU,mCACVC,EAAiB,6BAEjBC,EAAe,UAAMH,EAAN,gCAAqCC,EAArC,WACfG,EAAgB,UAAMJ,EAAN,iCAAsCC,G,kuCCJrD,IAAMI,EAAkBb,IAAOC,IAAV,KACZ,SAAAa,GAAK,oJAOVA,EAAMC,MAPI,kBCwBNC,EArBG,SAAC,GAA4B,IAA1BD,EAAyB,EAAzBA,MAAOE,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC/B,OACI,kBAACL,EAAD,CAAiBE,MAAOA,GACpB,yBAAKX,UAAU,qBACX,yBAAKA,UAAU,kBACX,4BAAKa,GACL,2BAAIC,O,29BCVjB,IAAMC,EAAkBnB,IAAOC,IAAV,KASfmB,EAAyBpB,IAAOC,IAAV,K,sjBCT5B,IAAMoB,EAAmBrB,IAAOC,IAAV,K,4dCAtB,IAAMqB,EAAmBtB,IAAOC,IAAV,KCOhBsB,EAAe,SAAAC,GAMxB,OALkB,IAAIC,KAAKC,aAAa,QAAS,CAC7CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IAEVC,OAAON,I,i8BCbrB,IAAMO,EAAqB/B,IAAOC,IAAV,K,gvDCCxB,IAAM+B,EAAkBhC,IAAOC,IAAV,KACZ,SAAAa,GAAK,OACjBA,EAAMmB,SAAN,eACYvB,GADZ,ORKkB,SQLlB,OAC6CI,EAAMmB,SADnD,MAEI,U,yaCLD,IAAMC,EAAoBlC,IAAOmC,OAAV,KCgBfC,EAZK,SAAC,GAAD,IAAGlB,EAAH,EAAGA,KAAMmB,EAAT,EAASA,SAAT,OAClB,kBAACH,EAAD,CAAmBI,KAAK,SAASC,QAASF,GACvCnB,ICgDUsB,EAzCG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACd,kBAACT,EAAD,CAAiBC,SAAUQ,EAAMC,eAC7B,yBAAKtC,UAAU,qBACX,yBAAKA,UAAU,mBACX,kBAAC,EAAD,CACIW,MACI0B,EAAME,YAAN,UACSjC,GADT,OXVJ,QWUI,OACwC+B,EAAME,aACxCC,IAEVC,WAAW,KAGnB,yBAAKzC,UAAU,kBACX,4BAAKqC,EAAMxB,OACX,oCACA,2BAAIwB,EAAMK,UAEV,yBAAK1C,UAAU,mBACX,6BACI,2CACA,yBAAKA,UAAU,SAASqC,EAAMM,eAElC,yBAAK3C,UAAU,YACX,uCAAaqC,EAAMO,UAAUC,OAAS,EAAI,IAAM,IAC/CR,EAAMO,UAAUE,KAAI,SAAAC,GAAO,OACxB,uBAAGC,IAAKD,EAAQE,WAAYF,EAAQG,eCKjDC,EAlCM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,QAAjB,OACjB,kBAAC3B,EAAD,KACI,yBAAK3B,UAAU,wBACX,yBAAKA,UAAU,4BACX,kBAAC,IAAD,CAAaA,UAAU,UAAUkD,KAAK,UAAUK,KAAK,OACrD,0BAAMvD,UAAU,qBAAhB,iBNfQ,SAAAoD,GACpB,IAAMI,EAAQC,KAAKC,MAAMN,EAAO,IAC1BO,EAAOP,EAAO,GACpB,MAAM,GAAN,OAAUI,EAAV,aAAoBG,EAApB,KMa+BC,CAASR,KAIhC,yBAAKpD,UAAU,4BACX,kBAAC,IAAD,CAAaA,UAAU,YAAYkD,KAAK,QAAQK,KAAK,OACrD,0BAAMvD,UAAU,qBAAhB,WACamB,EAAakC,KAI9B,yBAAKrD,UAAU,4BACX,kBAAC,IAAD,CAAaA,UAAU,aAAakD,KAAK,SAASK,KAAK,OACvD,0BAAMvD,UAAU,qBAAhB,YACcmB,EAAamC,QCJ5BO,EAnBI,SAAC,GAAD,IAAGlD,EAAH,EAAGA,MAAOmD,EAAV,EAAUA,QAASrB,EAAnB,EAAmBA,UAAnB,OACf,kBAACvB,EAAD,KACGuB,EACG,kBAAC,IAAD,CAAMxC,GAAE,WAAM6D,IACV,yBAAK9D,UAAU,YAAY+D,IAAKpD,EAAOqD,IAAI,gBAGjD,yBAAKD,IAAKpD,EAAOqD,IAAI,iBCSdC,EAjBI,SAAC,GAAD,IAAG5B,EAAH,EAAGA,MAAH,OACf,kBAACpB,EAAD,KACI,yBAAKjB,UAAU,sBACX,kBAAC,IAAD,CAAMC,GAAG,KACL,oCAEJ,gCACA,2BAAIoC,MCkCD6B,EAzCG,SAAC,GAAkB,IAAhBjC,EAAe,EAAfA,SAAe,EAENkC,mBAAS,IAFH,mBAEzBC,EAFyB,KAElBC,EAFkB,KAG1BC,EAAUC,iBAAO,MAcvB,OACI,kBAACxD,EAAD,KACI,kBAACC,EAAD,KACI,kBAAC,IAAD,CACIhB,UAAU,YACVkD,KAAK,SACLK,KAAK,OAET,2BACIrB,KAAK,OACLsC,YAAY,eACZC,SAvBC,SAAAC,GAAM,IACXC,EAAUD,EAAEE,OAAZD,MAERE,aAAaP,EAAQQ,SACrBT,EAASM,GAETL,EAAQQ,QAAUC,YAAW,WACzB9C,EAAS0C,KAEV,MAeSA,MAAOP,O,w3BCnCpB,IAAMY,EAAapF,IAAOC,IAAV,KAcVoF,GAAoBrF,IAAOC,IAAV,KCEfqF,GAZF,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACV,kBAACJ,EAAD,KACE,4BAAKG,GACL,kBAACF,GAAD,KAAoBG,K,8ZCPlB,IAAMC,GAAgBzF,IAAOC,IAAV,MCIXyF,GAFC,WAAO,OAAO,kBAACD,GAAD,O,8CC2FfE,GAtEF,WAAO,IAAD,EACqBpB,mBAAS,IAD9B,mBACRqB,EADQ,KACIC,EADJ,OCrBS,SAAAD,GAAc,MAGZrB,mBAAS,CAACuB,OAAQ,KAHN,mBAG/BtB,EAH+B,KAGxBC,EAHwB,OAIRF,oBAAS,GAJD,mBAI/BwB,EAJ+B,KAItBC,EAJsB,OAKZzB,oBAAS,GALG,mBAK/B0B,EAL+B,KAKxBC,EALwB,KAQhCC,EAAW,yCAAG,WAAMC,GAAN,kBAAAC,EAAA,6DAChBH,GAAS,GACTF,GAAW,GAELM,EAAaF,EAASG,OAAO,QAJnB,kBASgBC,MAAMJ,GATtB,8BASiCK,OATjC,OASNC,EATM,OAWZjC,GAAS,SAAAkC,GAAI,uBACRA,EADQ,CAEXb,QACkB,IAAhBQ,EAAA,uBACIK,EAAKb,QADT,aACoBY,EAAOE,UAD3B,aAEIF,EAAOE,SACbC,UAAWF,EAAKE,WAAaH,EAAOE,QAAQ,GAC5CE,YAAaJ,EAAOK,KACpBC,WAAYN,EAAOO,iBAnBT,kDAuBZf,GAAS,GACTgB,QAAQjB,MAAM,0BAxBF,QA0BhBD,GAAW,GA1BK,0DAAH,sDA6CjB,OAfAmB,qBAAU,WACFC,eAAeC,WACf5C,EAAS6C,KAAKC,MAAMH,eAAeC,YACnCrB,GAAW,IAEXG,EAAYvF,KAEjB,IAEHuG,qBAAU,WACDvB,GACDwB,eAAeI,QAAQ,YAAaF,KAAKG,UAAUjD,MAExD,CAACoB,EAAYpB,IAEV,CAAC,CAACA,QAAOuB,UAASE,SAAQE,GDvBbuB,CAAa9B,GATjB,8BAKPpB,MAAQsB,EALD,EAKCA,OAAQgB,EALT,EAKSA,YAAaE,EALtB,EAKsBA,WAAYH,EALlC,EAKkCA,UACzCd,EANO,EAMPA,QACAE,EAPO,EAOPA,MAEJE,EATW,KA+Bf,OAAGF,EAAc,kDACbH,EAAO,GAIP,qCACEF,GACA,kBAAC,EAAD,CACA7E,MAAK,UAAKL,GAAL,OpBtDO,SoBsDP,OAAsCmG,EAAUnE,eACrDzB,MAAO4F,EAAUc,eACjBzG,KAAM2F,EAAU/D,WAGhB,kBAAC,EAAD,CACET,SAjCa,SAAAkE,GACnB,IAAMH,EAAWG,EAAS5F,EAAkB4F,EAAS3F,EAErDiF,EAAcU,GACdJ,EAAYC,MA+BR,kBAAC,GAAD,CAAMb,OAAQK,EAAa,gBAAkB,kBAC1CE,EAAO5C,KAAI,SAAAT,GAAK,OACf,kBAAC,EAAD,CACEW,IAAKX,EAAMmF,GACX/E,WAAS,EACT9B,MACE0B,EAAME,YACFjC,EpBpEF,OoBoEgC+B,EAAME,YACpCC,IAENsB,QAASzB,EAAMmF,GACfC,UAAWpF,EAAMkF,qBAItB5B,GAAW,kBAAC,GAAD,MACXe,EAAcE,IAAejB,GAC5B,kBAAC+B,EAAD,CAAa5G,KAAK,YAAYmB,SA5Cf,WAErB,IAAM0F,EAAc,UAAMpH,GAAN,OAAwBiF,EAAxB,iBAA2CkB,EAAc,GACvEkB,EAAe,UAAMpH,EAAN,iBAA+BkG,EAAc,GAIhEX,EAFiBP,EAAamC,EAAiBC,OAO7B,kBAAC,GAAD,O,kiBEvDnB,IAAMC,GAAcjI,IAAOC,IAAV,MCWlBiI,GAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACV,kBAACF,GAAD,KACI,yBAAK9D,IACDgE,EAAMC,aAAN,UACK1H,GADL,OvBLQ,QuBKR,OACoCyH,EAAMC,cACpCxF,IAELwB,IAAI,eAET,0BAAMhE,UAAU,cAAc+H,EAAM7E,MACpC,0BAAMlD,UAAU,mBAAmB+H,EAAME,aAIjDH,GAAMI,WAAa,CACfH,MAAOI,KAAUC,QAGNN,UCWAO,GA5BD,SAAC,GAAiB,IAAD,ECTF,SAAAvE,GAAW,MAGVK,mBAAS,IAHC,mBAG7BC,EAH6B,KAGtBC,EAHsB,OAINF,oBAAS,GAJH,mBAI7BwB,EAJ6B,KAIpBC,EAJoB,OAKVzB,oBAAS,GALC,mBAK7B0B,EAL6B,KAKtBC,EALsB,KAQ9BwC,EAAYC,sBAAW,wBAAC,qCAAAtC,EAAA,6DAC1BH,GAAS,GACTF,GAAW,GAFe,SAMhBI,EANgB,UAMF5F,EANE,iBAMc0D,EANd,oBAMiCzD,GANjC,SAOM+F,MAAMJ,GAPZ,8BAOuBK,OAPvB,cAOhBC,EAPgB,OAShBkC,EATgB,UASKpI,EATL,iBASqB0D,EATrB,4BASgDzD,GAThD,UAUa+F,MAAMoC,GAVnB,gCAUqCnC,OAVrC,QAUhBoC,EAVgB,OAWhB7F,EAAY6F,EAAcC,KAAKC,QACjC,SAAAC,GAAM,MAAmB,aAAfA,EAAOC,OAIrBxE,EAAS,gBACFiC,EADC,CAEJwC,OAAQL,EAAcM,KACtBnG,eAnBkB,kDAuBtBkD,GAAS,GAvBa,QAyB1BF,GAAW,GAzBe,0DA0B3B,CAAC9B,IAMJ,OAHAiD,qBAAU,WACNuB,MACD,CAACA,IACG,CAAClE,EAAOuB,EAASE,GD5BQmD,CAHL,EAAdlF,SAAc,mBAGpBzB,EAHoB,KAGbsD,EAHa,KAM3B,OAN2B,KAMT,2DACdA,EAAgB,kBAAC,GAAD,MAIhB,oCACI,kBAAC,EAAD,CAAYtD,MAAOA,EAAMkF,iBACzB,kBAAC,EAAD,CAAWlF,MAAOA,IAClB,kBAAC,EAAD,CACIe,KAAMf,EAAM4G,QACZ5F,OAAQhB,EAAMgB,OACdC,QAASjB,EAAMiB,UAEnB,kBAAC,GAAD,CAAM6B,OAAO,UACR9C,EAAMyG,OAAOhG,KAAI,SAAAiF,GAAK,OACnB,kBAAC,GAAD,CAAO/E,IAAK+E,EAAM9E,UAAW8E,MAAOA,UE/BzCmB,GAFE,kBAAM,+DCwBRC,GAdH,WACV,OACI,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,GAAD,CAAMC,KAAK,MACX,kBAAC,GAAD,CAAOA,KAAK,cACZ,kBAAC,GAAD,CAAUC,SAAO,KAErB,kBAACnJ,EAAD,QCTYoJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAxE,GACLiB,QAAQjB,MAAMA,EAAMyE,a,kBEzI5BC,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.37c51740.chunk.js","sourcesContent":["import styled from 'styled-components';\n\n export const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n    display: flex;\n    justify-content: space-between;\n\n    h2 {\n      color: white; \n    }\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","import React from 'react'\n\n//import components\nimport { StyledHeader } from '../styles/StyledHeader'\nimport { Link } from '@reach/router';\n\n//Header component returns a link to the router of the main page and the name of the author\nconst Header = () => {\n    return(\n        <StyledHeader>\n            <div className='header-content'>\n                <Link to=\"/\">\n                    <h2>React Movie</h2>\n                </Link>\n                <h2>WiseChannel</h2>\n            </div>\n        </StyledHeader>\n    )\n};\n\nexport default Header\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd4e9e87f14a720e32c310104fc6d3f6b';\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;        \nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\n\n//const API_KEYV4 = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNGU5ZTg3ZjE0YTcyMGUzMmMzMTAxMDRmYzZkM2Y2YiIsInN1YiI6IjVlNmQzNWZhMTQyZWYxMDAxNzdmMmIwZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VoEnnJLd2a59uCsg-siVhpX1YiqXK7w-Ea8P1TA4qW4'\n\nconst BACKDROP_SIZE = 'w1280';\nconst POSTER_SIZE = 'w500';\n\nexport {\n    API_KEY,\n    API_URL,\n    BACKDROP_SIZE,\n    POSTER_SIZE,\n    IMAGE_BASE_URL,\n    SEARCH_BASE_URL,\n    POPULAR_BASE_URL\n}\n\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react'\n\nimport { StyledHeroImage } from '../styles/StyledHeroImage'\nimport PropTypes from 'prop-types'\n\n//Component of the hero that serves as a style wrapper for the title and text\nconst HeroImage = ({ image, title, text} ) => {\n    return (\n        <StyledHeroImage image={image}>\n            <div className='heroimage-content'>\n                <div className='heroimage-text'>\n                    <h1>{title}</h1>\n                    <p>{text}</p>\n                </div>\n            </div>\n        </StyledHeroImage>\n\n    )\n};\n\n//checking input parameters\nHeroImage.propTypes = {\n    image: PropTypes.string,\n    title: PropTypes.string,\n    text: PropTypes.string\n}\n\nexport default HeroImage\n","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    /* min-height: 340px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n    animation: animateMovieThumb 0.5s;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    .clickable {\n      cursor: pointer;\n    }\n\n    @keyframes animateMovieThumb {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n  }\n`;\n","\n//Конвертирует время в часы и минуты\nexport const calcTime = time => {\n    const hours = Math.floor(time / 60)\n    const mins = time % 60;\n    return `${hours}h ${mins}m`\n};\n\n//Конвертирует числа в денежный формат\nexport const convertMoney = money => {\n    const formatter = new Intl.NumberFormat('en-Us', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0,\n    });\n    return formatter.format(money)\n}\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../Config/config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\n\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn';\nimport PropTypes from 'prop-types'\n\n//Download component that serves as a button and raises a new event\nconst LoadMoreBtn = ({ text, callback }) => (\n  <StyledLoadMoreBtn type=\"button\" onClick={callback}>\n    {text}\n  </StyledLoadMoreBtn>\n);\n\n//checking propTypes input parameters\nLoadMoreBtn.propTypes = {\n  text: PropTypes.string,\n  callback: PropTypes.func\n}\n\nexport default LoadMoreBtn;\n","import React from 'react'\n\n//import Components\nimport MovieThumb from \"./MovieThumb\";\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../Config/config\";\nimport PropTypes from 'prop-types'\n\n//import Image\nimport NoImage from '../images/no_image.jpg';\n\n//import Style\nimport  { StyledMovieInfo } from \"../styles/StyledMovieInfo\";\nimport LoadMoreBtn from \"./LoadMore\";\n\n//Component containing movie information\nconst MovieInfo = ({ movie }) => (\n    <StyledMovieInfo backdrop={movie.backdrop_path}>\n        <div className=\"movieinfo-content\">\n            <div className=\"movieinfo-thumb\">\n                <MovieThumb\n                    image={\n                        movie.poster_path\n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                            : NoImage\n                    }\n                    clickable={false}\n                />\n            </div>\n            <div className=\"movieinfo-text\">\n                <h1>{movie.title}</h1>\n                <h3>PLOT</h3>\n                <p>{movie.overview}</p>\n\n                <div className=\"rating-director\">\n                    <div>\n                        <h3>IMDB RATING</h3>\n                        <div className=\"score\">{movie.vote_average}</div>\n                    </div>\n                    <div className=\"director\">\n                        <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n                        {movie.directors.map(element => (\n                            <p key={element.credit_id}>{element.name}</p>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </StyledMovieInfo>\n);\n\n//checking propTypes input parameters\nMovieInfo.propTypes = {\n    movie: PropTypes.object,\n    directors: PropTypes.array,\n}\n\nexport default MovieInfo\n","import React from 'react'\n\n//import Components\nimport FontAwesome from 'react-fontawesome'\nimport { calcTime, convertMoney } from \"../../Config/helpers\";\nimport PropTypes from 'prop-types'\n\n//import Styled\nimport { StyledMovieInfoBar } from \"../styles/StyledMovieInfoBar\";\nimport MovieInfo from \"./MovieInfo\";\n\n//Component contains information about time, budget, income\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n    <StyledMovieInfoBar>\n        <div className=\"movieinfobar-content\">\n            <div className=\"movieinfobar-content-col\">\n                <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\n                <span className=\"movieinfobar-info\">\n                    Running time: {calcTime(time)}\n                </span>\n            </div>\n\n            <div className=\"movieinfobar-content-col\">\n                <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\n                <span className=\"movieinfobar-info\">\n                    Budget: {convertMoney(budget)}\n                </span>\n            </div>\n\n            <div className=\"movieinfobar-content-col\">\n                <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\n                <span className=\"movieinfobar-info\">\n                    Revenue: {convertMoney(revenue)}\n                </span>\n            </div>\n        </div>\n    </StyledMovieInfoBar>\n);\n\n//checking propTypes input parameters\nMovieInfoBar.propTypes = {\n    time: PropTypes.number,\n    budget: PropTypes.number,\n    revenue: PropTypes.number\n};\n\nexport default MovieInfoBar\n","import React from 'react'\n\n//import components\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb'\nimport { Link } from '@reach/router'\nimport PropTypes from 'prop-types'\nimport MovieInfoBar from \"./MovieInfoBar\";\n\n//Takes a photo and an ID film at the entrance\nconst MovieThumb = ({ image, movieId, clickable }) => (\n    <StyledMovieThumb>\n      {clickable ? (\n          <Link to={`/${movieId}`}>\n              <img className=\"clickable\" src={image} alt=\"moviethumb\" />\n          </Link>\n      ) : (\n        <img src={image} alt=\"moviethumb\" />\n      )}\n    </StyledMovieThumb>\n  );\n\n//checking propTypes input parameters\nMovieThumb.propTypes = {\n    image: PropTypes.string,\n    movieId: PropTypes.number,\n    clickable: PropTypes.bool\n}\n\nexport default MovieThumb\n","import React from 'react'\n\nimport { Link } from \"@reach/router\";\nimport { StyledNavigation } from \"../styles/StyledNavigation\";\nimport PropTypes from 'prop-types'\nimport MovieThumb from \"./MovieThumb\";\n\n//Navigation component inside the information component\nconst Navigation = ({ movie }) => (\n    <StyledNavigation>\n        <div className=\"navigation-content\">\n            <Link to='/'>\n                <p>Home</p>\n            </Link>\n            <p>|</p>\n            <p>{movie}</p>\n        </div>\n    </StyledNavigation>\n);\n\n//checking propTypes input parameters\nNavigation.propTypes = {\n    movie: PropTypes.string\n}\n\nexport default Navigation\n","import React,{ useState, useRef } from 'react'\n\nimport FontAwesome from 'react-fontawesome'\nimport {StyledSearchBar, StyledSearchBarContent} from '../styles/StyledSearchBar'\nimport PropTypes from 'prop-types'\nimport Navigation from \"./Navigation\";\n\n//movie search bar components\nconst SearchBar = ({ callback }) => {\n\n    const [state, setState] = useState('')\n    const timeOut = useRef(null)\n\n    const doSearch = e => {\n        const { value } = e.target\n\n        clearTimeout(timeOut.current)\n        setState(value)\n\n        timeOut.current = setTimeout(() => {\n            callback(value)\n\n        }, 500)\n    }\n\n    return (\n        <StyledSearchBar>\n            <StyledSearchBarContent>\n                <FontAwesome\n                    className=\"fa-search\"\n                    name=\"search\"\n                    size=\"2x\"\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Search Movie\"\n                    onChange={doSearch}\n                    value={state}\n                />\n            </StyledSearchBarContent>\n        </StyledSearchBar>\n    )\n};\n\n//checking propTypes input parameters\nSearchBar.propTypes = {\n    callback: PropTypes.func\n}\n\nexport default SearchBar\n","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from 'react'\n\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid'\nimport PropTypes from 'prop-types'\n\n//component that serves as a wrapper\nconst Grid = ({ header, children }) => (\n   <StyledGrid>\n     <h1>{header}</h1>\n     <StyledGridContent>{children}</StyledGridContent>\n   </StyledGrid>\n )\n\nGrid.propTypes = {\n    header: PropTypes.string,\n    children: PropTypes.array\n};\n\nexport default Grid\n","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react'\nimport {StyledSpinner} from '../styles/StyledSpinner'\n\n//download component\nconst Spinner = () => {return <StyledSpinner/>}\n\nexport default Spinner\n","import React, { useState } from 'react'\n\n//import Config\nimport {\n        POPULAR_BASE_URL,\n        SEARCH_BASE_URL,\n        IMAGE_BASE_URL,\n        POSTER_SIZE,\n        BACKDROP_SIZE\n} from \"../Config/config\";\n\n// import Components\nimport HeroImage from \"./Elements/HeroImage\";\nimport SearchBar from \"./Elements/SearchBar\";\nimport Grid from \"./Elements/Grid\";\nimport MovieThumb from \"./Elements/MovieThumb\";\nimport LoadMoreBtn from \"./Elements/LoadMore\";\nimport Spinner from \"./Elements/Spinner\";\n\n//import custom hook\nimport { useHomeFetch } from \"./Hooks/useHomeFetch\";\n\nimport NoImage from './images/no_image.jpg'\n\n// Component of the House that stores the method of searching for films and downloading new films\nconst Home = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const [\n        {\n            state: {movies, currentPage, totalPages, heroImage},\n            loading,\n            error\n        },\n        fetchMovies] = useHomeFetch(searchTerm);\n\n    //Movie search method\n    const searchMovies = search => {\n      const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\n\n      setSearchTerm(search);\n      fetchMovies(endpoint)\n    }\n\n    //Movie upload method\n    const loadMoreMovies = () => {\n\n      const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${currentPage + 1}`;\n      const popularEndpoint = `${POPULAR_BASE_URL}&page=${currentPage + 1 }`;\n\n        const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\n\n        fetchMovies(endpoint);\n      }\n\n    //checking for errors and movie availability\n    if(error) return <div>New error in Home</div>;\n    if(!movies[0]) return <Spinner/>;\n\n    //component render\n    return (\n        <>\n        {!searchTerm && (\n          <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n          title={heroImage.original_title}\n          text={heroImage.overview}\n        />\n        )}\n          <SearchBar\n            callback={searchMovies}\n          />\n          <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\n            {movies.map(movie => (\n              <MovieThumb\n                key={movie.id}\n                clickable\n                image={\n                  movie.poster_path\n                    ? IMAGE_BASE_URL +POSTER_SIZE + movie.poster_path\n                    : NoImage\n                }\n                movieId={movie.id}\n                movieName={movie.original_title}\n              />\n            ))}\n          </Grid>\n          {loading && <Spinner />}\n          {currentPage < totalPages && !loading && (\n            <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />\n          )}\n        </>\n      );\n};\n\nexport default Home\n","import {useEffect, useState} from 'react'\nimport {POPULAR_BASE_URL} from \"../../Config/config\";\n\n// Component for asynchronously requesting data to the server\nexport const useHomeFetch = searchTerm => {\n\n    //states for storage, loading, and errors\n    const [state, setState] = useState({movies: []});\n    const [loading, setLoading] = useState(false );\n    const [error, setError] = useState(false);\n\n    //movie request method\n    const fetchMovies = async endpoint => {\n        setError(false);\n        setLoading(true);\n\n        const isLoadMore = endpoint.search('page');\n\n        //try/catch - wrapper for easy debugging\n        try {\n            //variable in which the request fetch occurs\n            const result = await (await fetch(endpoint)).json();\n            //transfer data to state\n            setState(prev => ({\n              ...prev,\n              movies:\n                isLoadMore !== -1\n              ? [...prev.movies, ...result.results]\n              : [...result.results],\n              heroImage: prev.heroImage || result.results[0],\n              currentPage: result.page,\n              totalPages: result.total_pages\n            }))\n          //catches and shows errors\n        } catch (e) {\n            setError(true);\n            console.error('Error from Home: ' + e);\n        }\n        setLoading(false)\n    };\n\n    //local storage check\n    useEffect(() => {\n        if (sessionStorage.homeState) {\n            setState(JSON.parse(sessionStorage.homeState));\n            setLoading(false);\n        } else {\n            fetchMovies(POPULAR_BASE_URL);\n        }\n    }, []);\n    //input parameter check\n    useEffect(() => {\n        if (!searchTerm) {\n            sessionStorage.setItem('homeState', JSON.stringify(state));\n        }\n    }, [searchTerm, state]);\n\n    return[{state, loading, error}, fetchMovies]\n};\n","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","import React from 'react'\n\n//import Image\nimport NoImage from '../images/no_image.jpg'\n\n//import Components\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../Config/config\";\nimport PropTypes from 'prop-types'\n\n//import Style\nimport { StyledActor } from \"../styles/StyledActor\";\n\n//Component of the actor that contains the name, character and img\nconst Actor = ({ actor }) => (\n    <StyledActor>\n        <img src={\n            actor.profile_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                : NoImage\n            }\n             alt='actorthumb'\n        />\n        <span className='actor-name'>{actor.name}</span>\n        <span className='actor-character'>{actor.character}</span>\n    </StyledActor>\n);\n\nActor.proppTypes = {\n    actor: PropTypes.object\n}\n\nexport default Actor\n","import React from 'react'\n\n//Components\nimport Navigation from \"./Elements/Navigation\";\nimport MovieInfo from \"./Elements/MovieInfo\";\nimport MovieInfoBar from \"./Elements/MovieInfoBar\";\nimport Actor from \"./Elements/Actor\";\nimport Grid from \"./Elements/Grid\";\nimport Spinner from \"./Elements/Spinner\";\n\n//import custom hook\nimport { useMovieFetch } from \"./Hooks/useMovieFetch\";\n\n//component that accepts the movie’s ID and returns information about actors, budget, lead time and revenue\nconst Movie = ({ movieId }) => {\n\n    //pulls out movies, loading and errors from the component useMovieFetch\n    const [movie, loading, error] = useMovieFetch(movieId);\n\n    //checking for errors and loading\n    if (error) return <div>Something went to wrong :(</div>;\n    if (loading) return <Spinner/>\n\n    //return new markup from key components\n    return (\n        <>\n            <Navigation movie={movie.original_title} />\n            <MovieInfo movie={movie} />\n            <MovieInfoBar\n                time={movie.runtime}\n                budget={movie.budget}\n                revenue={movie.revenue}\n            />\n            <Grid header=\"Actors\">\n                {movie.actors.map(actor => (\n                    <Actor key={actor.credit_id} actor={actor} />\n                ))}\n            </Grid>\n        </>\n    )\n};\n\nexport default Movie\n\n","import { useState, useEffect, useCallback } from 'react';\n\nimport { API_URL, API_KEY } from \"../../Config/config\";\n\n//Component for searching movies by id\nexport const useMovieFetch = movieId => {\n\n    //local state states download, date and errors\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    //Returns a memoized callback.\n    const fetchData = useCallback(async () => {\n        setError(false);\n        setLoading(true);\n\n        //request\n        try {\n            const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n            const result = await (await fetch(endpoint)).json();\n\n            const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n            const creditsResult = await (await fetch(creditsEndpoint)).json();\n            const directors = creditsResult.crew.filter(\n                member => member.job === 'Director'\n            );\n\n            //put the new result in a state\n            setState({\n                ...result,\n                actors: creditsResult.cast,\n                directors,\n            })\n\n        } catch (error) {\n            setError(true);\n        }\n        setLoading(false);\n    }, [movieId])\n\n    //calls the component fetch date in case of new changes\n    useEffect(() => {\n        fetchData();\n    }, [fetchData])\n    return [state, loading, error];\n};\n","import React from 'react'\n\nconst NotFound = () => <div>Error, this page not found =(</div>;\n\nexport default NotFound\n\n","import React from 'react';\nimport './App.css';\nimport Header from \"./Components/Elements/Header\";\n\nimport { GlobalStyle } from './Components/styles/GlobalStyle';\nimport { Router } from '@reach/router';\n\nimport Home from \"./Components/Home\";\nimport Movie from \"./Components/Movie\";\nimport NotFound from \"./Components/NotFound\";\n\n\nconst App = () => {\n  return(\n      <>\n        <Header/>\n        <Router>\n            <Home path=\"/\"/>\n            <Movie path=\"/:movieId\" />\n            <NotFound default />\n        </Router>\n        <GlobalStyle/>\n    </>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";"],"sourceRoot":""}